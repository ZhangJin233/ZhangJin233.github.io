<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technologies on 阿金&#39;s blog</title>
    <link>https://jane-dev.com/technology/</link>
    <description>Recent content in Technologies on 阿金&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-gb</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 19 Feb 2020 14:18:03 +0800</lastBuildDate>
    
	<atom:link href="https://jane-dev.com/technology/%E9%98%BF%E9%87%91s-blog.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Charles</title>
      <link>https://jane-dev.com/technology/charles/</link>
      <pubDate>Wed, 19 Feb 2020 14:18:03 +0800</pubDate>
      
      <guid>https://jane-dev.com/technology/charles/</guid>
      <description>工作中，抓包是常用的分析问题的手段。Mac 下Charles则是最常用的代理工具。 Charles的主要功能包括： 代理功能 HTTP/HTTPS 限速模拟 断点调试 转发</description>
    </item>
    
    <item>
      <title>TensorFlow mac anaconda 安装</title>
      <link>https://jane-dev.com/technology/tensorflow/</link>
      <pubDate>Wed, 01 Jan 2020 18:25:45 +0800</pubDate>
      
      <guid>https://jane-dev.com/technology/tensorflow/</guid>
      <description>环境 Mac：MacOS Catalina 10.15.2 anaconda：anaconda3-2019.10 pip:19.0 (如果系统pip小于19，则需要更新至最新) Python：2</description>
    </item>
    
    <item>
      <title>后端测试工具</title>
      <link>https://jane-dev.com/technology/Backend_test/</link>
      <pubDate>Tue, 10 Dec 2019 15:23:39 +0800</pubDate>
      
      <guid>https://jane-dev.com/technology/Backend_test/</guid>
      <description>mock工具 1、PowerMock - PowerMock is a Java framework that allows you to unit test code normally regarded as untestable. https://github.com/powermock/powermock 2、mockito https://site.mockito.org/ 3、Most popular Mocking framework for unit tests written in Java https://github.com/mockito/mockito API测试 1、Pr</description>
    </item>
    
    <item>
      <title>Android &amp; iOS 测试工具</title>
      <link>https://jane-dev.com/technology/androidTools/</link>
      <pubDate>Tue, 10 Dec 2019 14:36:49 +0800</pubDate>
      
      <guid>https://jane-dev.com/technology/androidTools/</guid>
      <description>Android 测试工具 性能 1、Android Studio 2、adb 3、AndroidGodEye:A performance monitor tool , like &amp;ldquo;Android Studio profiler&amp;rdquo; for Android , you can easily monitor the performance of your app real time in pc browser https://github.com/Kyson/AndroidGodEye 4、简称 &amp;ldquo;DoKit&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Hugo on GitHub Pages with Travis</title>
      <link>https://jane-dev.com/technology/hugo/</link>
      <pubDate>Tue, 18 Jun 2019 18:32:59 +0800</pubDate>
      
      <guid>https://jane-dev.com/technology/hugo/</guid>
      <description>Preparation steps 1.Install hugo on your local system. 2.Create a bot user account on GitHub. create two repositories on Github use two repositories: one for sources and another for publishing publishing repositories named like &amp;lt;user/org name&amp;gt;.github.io for your HTML content,and if you hava domain,you can go to Settings fill in your Custom domain and enable Enforce HTTPS. sources repositories named like Blog. Put your secrets to travis settings 1.New personal</description>
    </item>
    
    <item>
      <title>JAVA</title>
      <link>https://jane-dev.com/technology/JAVA/</link>
      <pubDate>Tue, 18 Jun 2019 18:24:25 +0800</pubDate>
      
      <guid>https://jane-dev.com/technology/JAVA/</guid>
      <description>在Java中，所有的代码必须写在类里，所以定义一个HelloWorld类。main()函数是程序执行的入口。 /*hello world程序*/ public class HelloWorld { public static</description>
    </item>
    
  </channel>
</rss>